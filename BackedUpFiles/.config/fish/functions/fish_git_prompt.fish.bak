function fish_git_prompt --description "Write out the git prompt line"
    # set -g __fish_git_prompt_show_informative_status 1

    # set -l is_inside_work_tree (git rev-parse --is-inside-work-tree ^/dev/null )

    # if test -z $is_inside_work_tree
    #     set git_status_info (__fish_git_print_status_info)
    # else
    #     set git_status_info (set_color -0 $fish_color_git_clean)$fish_prompt_git_status_dir(set_color $fish_color_normal)
    # end

    # printf "(%s|%s)" (__fish_git_print_branch_info) $git_status_info
    #


    set -g __fish_git_prompt_show_informative_status 1
    # set -g __fish_git_prompt_hide_untrackedfiles 1

    # set -g __fish_git_prompt_color_branch magenta bold
    # set -g __fish_git_prompt_showupstream "informative"
    # set -g __fish_git_prompt_char_upstream_ahead "↑"
    # set -g __fish_git_prompt_char_upstream_behind "↓"
    # set -g __fish_git_prompt_char_upstream_prefix ""

    # set -g __fish_git_prompt_char_stagedstate "●"
    # set -g __fish_git_prompt_char_dirtystate "✚"
    # set -g __fish_git_prompt_char_untrackedfiles "…"
    # set -g __fish_git_prompt_char_conflictedstate "✖"
    # set -g __fish_git_prompt_char_cleanstate "✔"

    # set -g __fish_git_prompt_color_dirtystate blue
    # set -g __fish_git_prompt_color_stagedstate yellow
    # set -g __fish_git_prompt_color_invalidstate red
    # set -g __fish_git_prompt_color_untrackedfiles $fish_color_normal
    # set -g __fish_git_prompt_color_cleanstate green bold

end
